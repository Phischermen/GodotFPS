[gd_resource type="VisualShader" load_steps=8 format=2]

[ext_resource path="res://Character/Sprites/Reticle.png" type="Texture" id=1]

[sub_resource type="VisualShaderNodeTexture" id=3]
texture = ExtResource( 1 )

[sub_resource type="VisualShaderNodeInput" id=4]
input_name = "uv"

[sub_resource type="VisualShaderNodeTexture" id=5]
source = 1

[sub_resource type="VisualShaderNodeInput" id=6]
input_name = "screen_uv"

[sub_resource type="VisualShaderNodeVectorOp" id=7]
default_input_values = [ 0, Vector3( 0.1, 1, 0.1 ), 1, Vector3( 1, 1, 1 ) ]
operator = 1

[sub_resource type="VisualShaderNodeVectorOp" id=8]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 0.9, 0.9, 0.9 ) ]
operator = 7

[resource]
code = "shader_type canvas_item;
uniform sampler2D tex_frg_2;


void vertex() {
// Output:0

}

void fragment() {
// Input:5
	vec3 n_out5p0;
	n_out5p0 = vec3(SCREEN_UV,0.0);

// Texture:4
	vec3 n_out4p0;
	float n_out4p1;
	{
		vec4 _tex_read = textureLod( SCREEN_TEXTURE , n_out5p0.xy, 0.0 );
		n_out4p0 = _tex_read.rgb;
		n_out4p1 = _tex_read.a;
	}

// VectorOp:6
	vec3 n_in6p0 = vec3(0.10000,1.00000,0.10000);
	vec3 n_out6p0;
	n_out6p0 = n_in6p0 - n_out4p0;

// VectorOp:7
	vec3 n_in7p1 = vec3(0.90000,0.90000,0.90000);
	vec3 n_out7p0;
	n_out7p0 = min( n_out6p0 , n_in7p1 );

// Input:3
	vec3 n_out3p0;
	n_out3p0 = vec3(UV,0.0);

// Texture:2
	vec3 n_out2p0;
	float n_out2p1;
	vec4 tex_frg_2_read = texture( tex_frg_2 , n_out3p0.xy );
	n_out2p0 = tex_frg_2_read.rgb;
	n_out2p1 = tex_frg_2_read.a;

// Output:0
	COLOR.rgb = n_out7p0;
	COLOR.a = n_out2p1;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -348, -107 )
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2( 580, 140 )
nodes/fragment/2/node = SubResource( 3 )
nodes/fragment/2/position = Vector2( 80, 120 )
nodes/fragment/3/node = SubResource( 4 )
nodes/fragment/3/position = Vector2( -80, 260 )
nodes/fragment/4/node = SubResource( 5 )
nodes/fragment/4/position = Vector2( 60, -60 )
nodes/fragment/5/node = SubResource( 6 )
nodes/fragment/5/position = Vector2( -200, -60 )
nodes/fragment/6/node = SubResource( 7 )
nodes/fragment/6/position = Vector2( 280, -40 )
nodes/fragment/7/node = SubResource( 8 )
nodes/fragment/7/position = Vector2( 520, -60 )
nodes/fragment/connections = PoolIntArray( 2, 1, 0, 1, 3, 0, 2, 0, 5, 0, 4, 0, 4, 0, 6, 1, 6, 0, 7, 0, 7, 0, 0, 0 )
